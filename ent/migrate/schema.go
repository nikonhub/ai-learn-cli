// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GeneratedProblemsColumns holds the columns for the "generated_problems" table.
	GeneratedProblemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "problem_text", Type: field.TypeString},
		{Name: "generated_on", Type: field.TypeTime},
		{Name: "item_generated_problems", Type: field.TypeInt, Nullable: true},
	}
	// GeneratedProblemsTable holds the schema information for the "generated_problems" table.
	GeneratedProblemsTable = &schema.Table{
		Name:       "generated_problems",
		Columns:    GeneratedProblemsColumns,
		PrimaryKey: []*schema.Column{GeneratedProblemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "generated_problems_items_generated_problems",
				Columns:    []*schema.Column{GeneratedProblemsColumns[3]},
				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ItemsColumns holds the columns for the "items" table.
	ItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "topic_items", Type: field.TypeInt, Nullable: true},
	}
	// ItemsTable holds the schema information for the "items" table.
	ItemsTable = &schema.Table{
		Name:       "items",
		Columns:    ItemsColumns,
		PrimaryKey: []*schema.Column{ItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "items_topics_items",
				Columns:    []*schema.Column{ItemsColumns[3]},
				RefColumns: []*schema.Column{TopicsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ItemProgressesColumns holds the columns for the "item_progresses" table.
	ItemProgressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "next_review_date", Type: field.TypeTime},
		{Name: "interval_days", Type: field.TypeInt, Default: 1},
		{Name: "ease_factor", Type: field.TypeFloat64, Default: 2.5},
		{Name: "streak", Type: field.TypeInt, Default: 0},
		{Name: "item_progress", Type: field.TypeInt, Nullable: true},
	}
	// ItemProgressesTable holds the schema information for the "item_progresses" table.
	ItemProgressesTable = &schema.Table{
		Name:       "item_progresses",
		Columns:    ItemProgressesColumns,
		PrimaryKey: []*schema.Column{ItemProgressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "item_progresses_items_progress",
				Columns:    []*schema.Column{ItemProgressesColumns[5]},
				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeString, Nullable: true},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// TopicsColumns holds the columns for the "topics" table.
	TopicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "instructions", Type: field.TypeString},
	}
	// TopicsTable holds the schema information for the "topics" table.
	TopicsTable = &schema.Table{
		Name:       "topics",
		Columns:    TopicsColumns,
		PrimaryKey: []*schema.Column{TopicsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GeneratedProblemsTable,
		ItemsTable,
		ItemProgressesTable,
		SettingsTable,
		TopicsTable,
	}
)

func init() {
	GeneratedProblemsTable.ForeignKeys[0].RefTable = ItemsTable
	ItemsTable.ForeignKeys[0].RefTable = TopicsTable
	ItemProgressesTable.ForeignKeys[0].RefTable = ItemsTable
}
